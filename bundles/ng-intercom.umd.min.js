!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/router"),require("@angular/common")):"function"==typeof define&&define.amd?define("ng-intercom",["exports","@angular/core","@angular/router","@angular/common"],e):e(t["ng-intercom"]={},t.ng.core,t.ng.router,t.ng.common)}(this,function(t,n,e,i){"use strict";var o=function(){},r=function(){function t(t,e,o){var r=this;this.config=t,this.platformId=e,this.router=o,i.isPlatformBrowser(this.platformId)&&(this.loadIntercom(t),t&&t.updateOnRouterChange?this.router.events.subscribe(function(t){r.update()}):n.isDevMode()&&console.warn("\n      Common practice in single page applications is to update whenever the route changes.\n      ng-intercom supports this functionality out of the box just set 'updateOnRouterChange' to true in your Intercom Module config.\n       This warning will not appear in production, if you choose not to use router updating.\n     "))}return t.prototype.boot=function(t){if(i.isPlatformBrowser(this.platformId)){var e=Object.assign({},t,{app_id:this.config.appId});return window.Intercom("boot",e)}},t.prototype.shutdown=function(){if(i.isPlatformBrowser(this.platformId))return window.Intercom("shutdown")},t.prototype.update=function(t){if(i.isPlatformBrowser(this.platformId))return t?window.Intercom("update",t):window.Intercom("update")},t.prototype.hide=function(){if(i.isPlatformBrowser(this.platformId))return window.Intercom("hide")},t.prototype.show=function(t){if(i.isPlatformBrowser(this.platformId))return t?window.Intercom("show"):this.showNewMessage(t)},t.prototype.showMessages=function(){if(i.isPlatformBrowser(this.platformId))return window.Intercom("showMessages")},t.prototype.showNewMessage=function(t){if(i.isPlatformBrowser(this.platformId))return t?window.Intercom("showNewMessage",t):window.Intercom("showNewMessage")},t.prototype.trackEvent=function(t,e){if(i.isPlatformBrowser(this.platformId))return e?window.Intercom("trackEvent",t,e):window.Intercom("trackEvent",t)},t.prototype.getVisitorId=function(){if(i.isPlatformBrowser(this.platformId))return window.Intercom("getVisitorId")},Object.defineProperty(t.prototype,"visitorId",{get:function(){if(i.isPlatformBrowser(this.platformId))return window.Intercom("getVisitorId")},enumerable:!0,configurable:!0}),t.prototype.onShow=function(t){if(i.isPlatformBrowser(this.platformId))return window.Intercom("onShow",t)},t.prototype.onHide=function(t){if(i.isPlatformBrowser(this.platformId))return window.Intercom("onHide",t)},t.prototype.onUnreadCountChange=function(t){if(i.isPlatformBrowser(this.platformId))return window.Intercom("onUnreadCountChange",t)},t.prototype.l=function(){var t=document,e=t.createElement("script");e.type="text/javascript",e.async=!0,e.src="https://widget.intercom.io/widget/"+this.id;var o=t.getElementsByTagName("script")[0];o.parentNode.insertBefore(e,o)},t.prototype.loadIntercom=function(t){this.id=t.appId;var e=window,o=e.Intercom;if("function"==typeof o)o("reattach_activator"),o("update",t);else{var r=function(){r.c(arguments)};r.q=[],r.c=function(t){r.q.push(t)},e.Intercom=r,e.attachEvent?e.attachEvent("onload",this.l):e.addEventListener("load",this.l,!1)}},t}();r.decorators=[{type:n.Injectable}],r.ctorParameters=function(){return[{type:o,decorators:[{type:n.Inject,args:[o]}]},{type:Object,decorators:[{type:n.Inject,args:[n.PLATFORM_ID]}]},{type:e.Router,decorators:[{type:n.Optional},{type:n.Inject,args:[e.Router]}]}]};var s=function(){function t(t){this.intercom=t}return t.prototype.onClick=function(){!1!==this.intercomHide&&this.intercom.hide()},t}();s.decorators=[{type:n.Directive,args:[{selector:"[intercomHide]"}]}],s.ctorParameters=function(){return[{type:r}]},s.propDecorators={intercomHide:[{type:n.Input}],onClick:[{type:n.HostListener,args:["click"]}]};var c=function(){function t(t){this.intercom=t}return t.prototype.onClick=function(){!1!==this.intercomShowMessages&&this.intercom.showMessages()},t}();c.decorators=[{type:n.Directive,args:[{selector:"[intercomShowMessages]"}]}],c.ctorParameters=function(){return[{type:r}]},c.propDecorators={intercomShowMessages:[{type:n.Input}],onClick:[{type:n.HostListener,args:["click"]}]};var a=function(){function t(t){this.intercom=t}return t.prototype.onClick=function(){(this.message?this.message:this.intercomShowNewMessage)?this.intercom.showNewMessage(this.message):this.intercom.showNewMessage()},t}();a.decorators=[{type:n.Directive,args:[{selector:"[intercomShowNewMessage]"}]}],a.ctorParameters=function(){return[{type:r}]},a.propDecorators={message:[{type:n.Input}],intercomShowNewMessage:[{type:n.Input}],onClick:[{type:n.HostListener,args:["click"]}]};var p=function(){function t(t){this.intercom=t}return t.prototype.onClick=function(){(this.message?this.message:this.intercomShow)?this.intercom.showNewMessage(this.message):this.intercom.show()},t}();p.decorators=[{type:n.Directive,args:[{selector:"[intercomShow]"}]}],p.ctorParameters=function(){return[{type:r}]},p.propDecorators={message:[{type:n.Input}],intercomShow:[{type:n.Input}],onClick:[{type:n.HostListener,args:["click"]}]};var u=function(){function t(t){this.intercom=t}return t.prototype.onClick=function(){!1!==this.intercomShutdown&&this.intercom.shutdown()},t}();u.decorators=[{type:n.Directive,args:[{selector:"[intercomShutdown]"}]}],u.ctorParameters=function(){return[{type:r}]},u.propDecorators={intercomShutdown:[{type:n.Input}],onClick:[{type:n.HostListener,args:["click"]}]};var m=function(){function t(t){this.intercom=t}return t.prototype.onClick=function(){var t=this.event?this.event:this.intercomTrackEvent;if(t&&this.metadata)this.intercom.trackEvent(t,this.metadata);else{if(!t||this.metadata)throw new Error("Error in intercomTrackEvent directive: You must specify an event to track.");this.intercom.trackEvent(t)}},t}();m.decorators=[{type:n.Directive,args:[{selector:"[intercomTrackEvent]"}]}],m.ctorParameters=function(){return[{type:r}]},m.propDecorators={event:[{type:n.Input}],intercomTrackEvent:[{type:n.Input}],metadata:[{type:n.Input}],onClick:[{type:n.HostListener,args:["click"]}]};var f=function(){function e(){}return e.forRoot=function(t){return{ngModule:e,providers:[{provide:o,useValue:t}]}},e}();f.decorators=[{type:n.NgModule,args:[{imports:[e.RouterModule],declarations:[s,c,a,p,u,m],exports:[s,c,a,p,u,m],providers:[r]}]}],t.Intercom=r,t.IntercomConfig=o,t.IntercomHideDirective=s,t.IntercomModule=f,t.IntercomShowDirective=p,t.IntercomShowMessagesDirective=c,t.IntercomShowNewMessageDirective=a,t.IntercomShutdownDirective=u,t.IntercomTrackEventDirective=m,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ng-intercom.umd.min.js.map
